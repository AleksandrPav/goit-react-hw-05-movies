{"version":3,"file":"static/js/123.9d682a8f.chunk.js","mappings":"kPACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,0B,6BCuDrH,EA/CgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACNL,GAAW,GACX,IAAMM,EAAS,mCAAG,8GAEWC,EAAAA,EAAAA,IAAgBC,OAAOL,IAFlC,OAEJM,EAFI,OAGVX,EAAWW,GACXT,GAAW,GAJD,gDAMVE,GAAS,GACTQ,QAAQC,OAAR,MAPU,yBASVX,GAAW,GATD,4EAAH,qDAYfM,GACH,GAAG,CAACH,KAGD,iBAAKS,UAAWC,EAAAA,UAAhB,UACKd,IAAW,SAACe,EAAA,EAAD,IACXb,IAAS,eAAIW,UAAWC,EAAAA,MAAf,oBACV,eAAID,UAAWC,EAAAA,KAAf,SACKhB,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,gBAAaN,UAAWC,EAAAA,KAAxB,WACI,eAAGD,UAAWC,EAAAA,OAAd,WAA0B,uCAA1B,IAAiDI,MACjD,cAAGL,UAAWC,EAAAA,QAAd,SAA4BK,MAFvBF,EADA,QAS5B,C,4MC5CKG,EAAU,mCACVC,EAAM,gCAGNC,EAAQ,mCAAG,WAAOC,GAAP,yFACUC,IAAAA,IAAA,UAAaH,EAAb,gCAAwCD,EAAxC,kBAAyDG,GAAS,CACrFE,OAAQ,CACJF,MAAOA,KAHF,uBACLG,EADK,EACLA,KADK,kBAMNA,EAAKC,SANC,2CAAH,sDASRC,EAAiB,mCAAG,sGACDJ,IAAAA,IAAA,UAAaH,GAAb,OAZT,qBAYS,oBAAsCD,IADrC,uBACfM,EADe,EACfA,KADe,kBAEfA,EAAKC,SAFU,2CAAH,qDAKjBE,EAAe,mCAAG,WAAOzB,GAAP,4EACfA,EADe,iEAIGoB,IAAAA,IAAA,UAAaH,EAAb,iBAAyBjB,EAAzB,oBAA4CgB,IAJ/C,uBAIZM,EAJY,EAIZA,KAJY,kBAKbA,GALa,2CAAH,sDAQfI,EAAY,mCAAG,WAAO1B,GAAP,4EACZA,EADY,iEAIMoB,IAAAA,IAAA,UAAaH,EAAb,iBAAyBjB,EAAzB,4BAAoDgB,IAJ1D,uBAITM,EAJS,EAITA,KAJS,kBAKVA,EAAKK,MALK,2CAAH,sDAQZvB,EAAe,mCAAG,WAAOJ,GAAP,4EACfA,EADe,iEAIGoB,IAAAA,IAAA,UAAaH,EAAb,iBAAyBjB,EAAzB,4BAAoDgB,IAJvD,uBAIZM,EAJY,EAIZA,KAJY,kBAKbA,EAAKC,SALQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/ReviewsPage/Reviews.module.css?4684","components/pages/ReviewsPage/ReviewsPage.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__Ci4ey\",\"item\":\"Reviews_item__OwRoi\",\"author\":\"Reviews_author__uIzDt\",\"content\":\"Reviews_content__BmFT5\"};","import React, { useState, useEffect } from 'react';\nimport { useParams} from \"react-router-dom\";\nimport css from \"./Reviews.module.css\";\nimport { getMovieReviews } from \"../../services/API\";\nimport Loader from 'components/modules/Loader/Loader';\n\nimport PropTypes from \"prop-types\";\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n        const fetchData = async () => {\n            try {\n                const result = await getMovieReviews(Number(movieId));\n                setReviews(result);\n                setLoading(false);\n            } catch (error) {\n                setError(true);\n                Promise.reject(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n    } , [movieId]);\n    \n    return (\n        <div className={css.container}>\n            {loading && <Loader />}\n            {error && <h1 className={css.error}>Error</h1>}\n            <ul className={css.list}>\n                {reviews.map(({ id, author, content }) => (\n                    <li key={id} className={css.item}>\n                        <p className={css.author}><span>Author: </span> {author}</p>\n                        <p className={css.content}>{content}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nReviews.propTypes = {\n    reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = \"2ad314a52028ffb1db124a28b0df35b2\";\nconst URL = \"https://api.themoviedb.org/3/\";\nconst OPTIONS = \"trending/movie/day\"\n\nconst getMovie = async (query) => {\n    const { data } = await axios.get(`${URL}search/movie?api_key=${API_KEY}&query=${query}`, {\n        params: {\n            query: query,\n        },\n    });\n    return data.results;\n}\n\nconst getTrendingMovies = async () => {\n    const {data} = await axios.get(`${URL}${OPTIONS}?api_key=${API_KEY}`);\n    return data.results;\n}\n\nconst getMovieDetails = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n}\n\nconst getMovieCast = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return data.cast;\n}\n\nconst getMovieReviews = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data.results;\n}\n\n\n\n\nexport { getTrendingMovies, getMovieDetails , getMovieCast, getMovieReviews, getMovie };\n\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchData","getMovieReviews","Number","result","Promise","reject","className","css","Loader","map","id","author","content","API_KEY","URL","getMovie","query","axios","params","data","results","getTrendingMovies","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}