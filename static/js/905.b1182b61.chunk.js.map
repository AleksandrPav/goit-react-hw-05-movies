{"version":3,"file":"static/js/905.b1182b61.chunk.js","mappings":"kPACA,GAAgB,UAAY,4BAA4B,IAAM,sBAAsB,UAAY,4BAA4B,MAAQ,wBAAwB,KAAO,uBAAuB,SAAW,2BAA2B,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,uBAAuB,YAAc,8BAA8B,SAAW,4B,+CCUpW,SAASA,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,GACX,IAAMI,EAAS,mCAAG,8GAEWC,EAAAA,EAAAA,MAFX,OAEJC,EAFI,OAGVV,EAAUU,GAHA,gDAKVR,EAAS,EAAD,IALE,yBAOVE,GAAW,GAPD,4EAAH,qDAUfI,GACH,GAAE,KAKC,iBAAKG,UAAWC,EAAAA,UAAhB,UACKT,IAAW,SAACU,EAAA,EAAD,IACXZ,IAAS,eAAIU,UAAWC,EAAAA,MAAf,oBACV,iBAAKD,UAAWC,EAAAA,IAAhB,WACI,eAAID,UAAWC,EAAAA,UAAf,6BACA,eAAID,UAAWC,EAAAA,MAAf,SACCb,EAAOe,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,YAAb,OACJ,eAAIN,UAAWC,EAAAA,KAAf,UACI,UAAC,KAAD,CAAMM,MAAO,CAACC,KAAMd,GAAWe,GAAE,kBAAaL,GAAMJ,UAAWC,EAAAA,SAA/D,WACA,iBAAMD,UAAWC,EAAAA,SAAjB,UAA+B,SAAC,MAAD,CAAeD,UAAWC,EAAAA,UACzD,eAAID,UAAWC,EAAAA,MAAf,SAA2BI,KAC3B,gBAAKK,IAAG,0CAAqCJ,GAAeK,IAAKN,EAAOL,UAAWC,EAAAA,kBAJzDG,EAD1B,WAevB,C,4MCtDCQ,EAAU,mCACVC,EAAM,gCAGNC,EAAQ,mCAAG,WAAOC,GAAP,yFACUC,IAAAA,IAAA,UAAaH,EAAb,gCAAwCD,EAAxC,kBAAyDG,GAAS,CACrFE,OAAQ,CACJF,MAAOA,KAHF,uBACLG,EADK,EACLA,KADK,kBAMNA,EAAKC,SANC,2CAAH,sDASRrB,EAAiB,mCAAG,sGACDkB,IAAAA,IAAA,UAAaH,GAAb,OAZT,qBAYS,oBAAsCD,IADrC,uBACfM,EADe,EACfA,KADe,kBAEfA,EAAKC,SAFU,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,4EACfA,EADe,iEAIGL,IAAAA,IAAA,UAAaH,EAAb,iBAAyBQ,EAAzB,oBAA4CT,IAJ/C,uBAIZM,EAJY,EAIZA,KAJY,kBAKbA,GALa,2CAAH,sDAQfI,EAAY,mCAAG,WAAOD,GAAP,4EACZA,EADY,iEAIML,IAAAA,IAAA,UAAaH,EAAb,iBAAyBQ,EAAzB,4BAAoDT,IAJ1D,uBAITM,EAJS,EAITA,KAJS,kBAKVA,EAAKK,MALK,2CAAH,sDAQZC,EAAe,mCAAG,WAAOH,GAAP,4EACfA,EADe,iEAIGL,IAAAA,IAAA,UAAaH,EAAb,iBAAyBQ,EAAzB,4BAAoDT,IAJvD,uBAIZM,EAJY,EAIZA,KAJY,kBAKbA,EAAKC,SALQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/HomePage/HomePage.module.css?fc24","components/pages/HomePage/HomePage.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__bUkO+\",\"row\":\"HomePage_row__55P+s\",\"mainTitle\":\"HomePage_mainTitle__I40Dq\",\"items\":\"HomePage_items__KNzJN\",\"item\":\"HomePage_item__sFa1p\",\"itemLink\":\"HomePage_itemLink__Z2IT7\",\"icon\":\"HomePage_icon__bSHFt\",\"title\":\"HomePage_title__Pdvr1\",\"text\":\"HomePage_text__gYjVI\",\"moviesImage\":\"HomePage_moviesImage__5Oaw8\",\"iconItem\":\"HomePage_iconItem__XEhF6\"};","import React, { useState, useEffect } from 'react';\nimport {getTrendingMovies} from 'components/services/API';\nimport css from './HomePage.module.css';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport { Link, useLocation } from 'react-router-dom';\nimport Loader from 'components/modules/Loader/Loader';\n\nimport PropTypes from \"prop-types\";\n\n\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n        setLoading(true);\n        const fetchData = async () => {\n            try {\n                const result = await getTrendingMovies();\n                setMovies(result);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            } \n            }\n        fetchData();\n    }, []);\n\n    \n    return (\n        \n        <div className={css.container}>\n            {loading && <Loader />}\n            {error && <h1 className={css.error}>Error</h1>}\n            <div className={css.row}>\n                <h2 className={css.mainTitle}>Trending today</h2>\n                <ul className={css.items} >\n                {movies.map(({id, title, poster_path}) => (\n                        <li className={css.item} key={id}>\n                            <Link state={{from: location}} to={`/movies/${id}`} className={css.itemLink}>\n                            <span className={css.iconItem}><BiCameraMovie className={css.icon} /></span>\n                            <h3 className={css.title}>{title}</h3>\n                            <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} className={css.moviesImage} />\n                            </Link>\n                        </li>\n                ))}\n                    </ul>\n            </div>\n        </div>\n    );\n\n\n    }\n\n\nHomePage.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string.isRequired,\n        })\n    ),\n    error: PropTypes.string,\n    loading: PropTypes.bool,\n}\n\n\n","import axios from \"axios\";\n\nconst API_KEY = \"2ad314a52028ffb1db124a28b0df35b2\";\nconst URL = \"https://api.themoviedb.org/3/\";\nconst OPTIONS = \"trending/movie/day\"\n\nconst getMovie = async (query) => {\n    const { data } = await axios.get(`${URL}search/movie?api_key=${API_KEY}&query=${query}`, {\n        params: {\n            query: query,\n        },\n    });\n    return data.results;\n}\n\nconst getTrendingMovies = async () => {\n    const {data} = await axios.get(`${URL}${OPTIONS}?api_key=${API_KEY}`);\n    return data.results;\n}\n\nconst getMovieDetails = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n}\n\nconst getMovieCast = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n    return data.cast;\n}\n\nconst getMovieReviews = async (movieId) => {\n    if (!movieId) {\n        return;\n    }\n    const { data } = await axios.get(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data.results;\n}\n\n\n\n\nexport { getTrendingMovies, getMovieDetails , getMovieCast, getMovieReviews, getMovie };\n\n"],"names":["HomePage","useState","movies","setMovies","error","setError","loading","setLoading","location","useLocation","useEffect","fetchData","getTrendingMovies","result","className","css","Loader","map","id","title","poster_path","state","from","to","src","alt","API_KEY","URL","getMovie","query","axios","params","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}